// The mix-blend-mode CSS property describes how an element's content should blend with the content of the element's direct parent and the element's background.
.button{
    z-index: 4;
}

.text-button{
    color: white!important;
    mix-blend-mode: difference;
}

@media (min-width: 700px){
  body.intro-visible{
      .button{
          position: absolute;
      }
      .top-right{
          top: calc(#{$space_tb} + 100vh);
          right: $space_lr;
      }
      .top-left{
          top: calc(#{$space_tb} + 100vh);
          left: $space_lr;
      }
  }
  body.intro-hidden{
      .button{
          position: fixed;
      }
      .top-right{
          top: $space_tb;
          right: $space_lr;
      }
      .top-left{
          top: $space_tb;
          left: $space_lr;
      }
  }

  .burger{
    margin-top: 4px;
  }
}

@media (max-width: 699px){
    .button{
        position: fixed;
    }
    .top-right{
        top: $m_space_tb;
        right: $m_space_lr;
    }
    .top-left{
        top: $m_space_tb;
        left: $m_space_lr;
        z-index: 5;
    }
    .burger{
      margin-top: -1px;
    }
    .logo-wrap{
      margin-top: -4px;
    }
}



// http://callmenick.com/post/animating-css-only-hamburger-menu-icons

$button-width: 40px;                    // The width of the button area
$button-height: 25px;                   // The height of the button area
$bar-thickness: 2px;                    // The thickness of the button bars
$button-pad: 0;                      // The left/right padding between button area and bars.
$button-bar-space: 9px;                // The spacing between button bars
$button-transition-duration: 0.2s;     // The transition duration

/**
 * Toggle Switch Globals
 *
 * All switches should take on the class `c-hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.burger {
  border-radius: 0;
  padding: 0;
  width: $button-width;
  height: $button-height;
  font-size: 0;
  text-indent: -9999px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: none;
  border-radius: none;
  border: none;
  cursor: pointer;
  transition: background $button-transition-duration;
  background-color: transparent;
  z-index: 31;
}

.burger:focus {
  outline: none;
}

.burger span {
  display: block;
  position: absolute;
  top: ($button-height / 2) - ($bar-thickness / 2);
  left: $button-pad;
  right: $button-pad;
  height: $bar-thickness;
  background-color: #000;
}

.burger span::before,
.burger span::after {
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: $bar-thickness;
  background-color: #000;
  content: "";
}

.burger span::before {
  top: -$bar-thickness - $button-bar-space;
}

.burger span::after {
  bottom: -$bar-thickness - $button-bar-space;
}

/**
 * Style 2
 *
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */

.burger span {
  transition: background-color $button-transition-duration 0s;
}

.burger span::before,
.burger span::after {
  transition-duration: $button-transition-duration, $button-transition-duration;
  transition-delay: $button-transition-duration, 0s;
}

.burger span::before {
  transition-property: top, transform;
  -webkit-transition-property: top, -webkit-transform;
}

.burger span::after {
  transition-property: bottom, transform;
  -webkit-transition-property: bottom, -webkit-transform;
}

/* active state, i.e. menu open */

.burger.active {

}

.burger.active span {
  background-color: transparent!important;
}

.burger.active span::before {
  transform: rotate(45deg);
  top: 0;
}

.burger.active span::after {
  transform: rotate(-45deg);
  bottom: 0;
}

.burger.active span::before,
.burger.active span::after {
  transition-delay: 0s, $button-transition-duration;
}
